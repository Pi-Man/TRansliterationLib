plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    jcenter()

	maven { url 'https://jitpack.io' } //fabric asm
	maven {url 'https://maven.terraformersmc.com/releases'}
	maven { url "https://maven.shedaniel.me/" }
}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

minecraft {
	accessWidener =  file("src/main/resources/transliteration.accesswidener")
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"


	modApi("com.terraformersmc:modmenu:${project.modmenu_version}"){
		exclude(group: "net.fabricmc.fabric-api")
	}

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"){
		exclude(group: "net.fabricmc.fabric-api")
	}
	include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"
	// https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
	modApi group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

	// Fabric API. The keybinding registry is in this.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	implementation project(':TRLCore')
}

sourceSets.main.java.srcDirs = ['src/generated/java','src/main/java']

processResources {
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}


}
